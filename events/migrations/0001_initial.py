# Generated by Django 3.2.18 on 2023-08-15 08:22

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import events.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=100, verbose_name='Псевдоним')),
                ('bio', models.TextField(verbose_name='Описание')),
                ('firstname', models.CharField(max_length=100, verbose_name='Имя')),
                ('lastname', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('surname', models.CharField(max_length=100, verbose_name='Отчество')),
                ('birthday', models.DateField(verbose_name='День рождения')),
            ],
            options={
                'verbose_name': 'Артист',
                'verbose_name_plural': 'Артисты',
            },
        ),
        migrations.CreateModel(
            name='ArtistType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип артиста',
                'verbose_name_plural': 'Типы артистов',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Оценка')),
                ('comment_text', models.TextField(verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=256, verbose_name='Название')),
                ('cover', models.ImageField(blank=True, null=True, upload_to=events.models.Event.get_path, verbose_name='Баннер')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('age_limit', models.IntegerField(blank=True, default=0, verbose_name='Возрастное орграничение')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата конца')),
                ('open', models.BooleanField(blank=True, default=True, verbose_name='Событие открыто')),
            ],
            options={
                'verbose_name': 'Событие',
                'verbose_name_plural': 'События',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='EventImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=events.models.EventImage.get_path, verbose_name='Баннер')),
            ],
            options={
                'verbose_name': 'Файл события',
                'verbose_name_plural': 'Файлы события',
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Выступление', max_length=255, verbose_name='Название выступления')),
                ('time', models.TimeField(blank=True, null=True, verbose_name='Время')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата')),
                ('open', models.BooleanField(blank=True, default=True, verbose_name='Открыто')),
            ],
            options={
                'verbose_name': 'Выступление',
                'verbose_name_plural': 'Выступления',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xid', models.CharField(default='', max_length=256, verbose_name='XID')),
                ('name', models.CharField(max_length=256, verbose_name='Площадка')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('location', models.TextField(blank=True, null=True, verbose_name='Расположение')),
                ('support_phone', models.CharField(blank=True, default='', max_length=100, verbose_name='Телефон поддержки')),
            ],
            options={
                'verbose_name': 'Площадка',
                'verbose_name_plural': 'Площадки',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тэг',
                'verbose_name_plural': 'Тэги',
            },
        ),
        migrations.CreateModel(
            name='TicketType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sector', models.CharField(default='Зал', max_length=255, verbose_name='Сектор')),
                ('price', models.IntegerField(default=0, verbose_name='Цена')),
                ('tickets_number', models.IntegerField(default=0, verbose_name='Количество билетов')),
                ('tickets_sold', models.IntegerField(default=0, verbose_name='Билетов продано')),
                ('open', models.BooleanField(blank=True, default=True, verbose_name='Открыто')),
            ],
            options={
                'verbose_name': 'Тип билета',
                'verbose_name_plural': 'Типы билетов',
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attended', models.BooleanField(blank=True, default=False, verbose_name='Посетил')),
                ('performance', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tickets_performance', to='events.performance', verbose_name='Выступление')),
                ('ticket_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tickets_tickettype', to='events.tickettype', verbose_name='Тип билета')),
            ],
            options={
                'verbose_name': 'Билет',
                'verbose_name_plural': 'Билеты',
            },
        ),
    ]
